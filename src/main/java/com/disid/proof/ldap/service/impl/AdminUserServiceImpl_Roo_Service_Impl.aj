// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.proof.ldap.service.impl;

import com.disid.proof.ldap.model.AdminUser;
import com.disid.proof.ldap.repository.AdminUserRepository;
import com.disid.proof.ldap.service.impl.AdminUserServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AdminUserServiceImpl_Roo_Service_Impl {
    
    declare @type: AdminUserServiceImpl: @Service;
    
    declare @type: AdminUserServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private AdminUserRepository AdminUserServiceImpl.adminUserRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param adminUserRepository
     */
    @Autowired
    public AdminUserServiceImpl.new(AdminUserRepository adminUserRepository) {
        setAdminUserRepository(adminUserRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return AdminUserRepository
     */
    public AdminUserRepository AdminUserServiceImpl.getAdminUserRepository() {
        return adminUserRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param adminUserRepository
     */
    public void AdminUserServiceImpl.setAdminUserRepository(AdminUserRepository adminUserRepository) {
        this.adminUserRepository = adminUserRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param adminUser
     */
    @Transactional
    public void AdminUserServiceImpl.delete(AdminUser adminUser) {
        getAdminUserRepository().delete(adminUser);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<AdminUser> AdminUserServiceImpl.save(Iterable<AdminUser> entities) {
        return getAdminUserRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void AdminUserServiceImpl.delete(Iterable<Long> ids) {
        List<AdminUser> toDelete = getAdminUserRepository().findAll(ids);
        getAdminUserRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return AdminUser
     */
    @Transactional
    public AdminUser AdminUserServiceImpl.save(AdminUser entity) {
        return getAdminUserRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return AdminUser
     */
    public AdminUser AdminUserServiceImpl.findOne(Long id) {
        return getAdminUserRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return AdminUser
     */
    public AdminUser AdminUserServiceImpl.findOneForUpdate(Long id) {
        return getAdminUserRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<AdminUser> AdminUserServiceImpl.findAll(Iterable<Long> ids) {
        return getAdminUserRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<AdminUser> AdminUserServiceImpl.findAll() {
        return getAdminUserRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long AdminUserServiceImpl.count() {
        return getAdminUserRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<AdminUser> AdminUserServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getAdminUserRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<AdminUser> AdminUserServiceImpl.getEntityType() {
        return AdminUser.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> AdminUserServiceImpl.getIdType() {
        return Long.class;
    }
    
}
