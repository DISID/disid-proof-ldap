// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.proof.ldap.web;

import com.disid.proof.ldap.model.LocalUser;
import com.disid.proof.ldap.service.api.LocalUserService;
import com.disid.proof.ldap.web.LocalUsersItemThymeleafController;
import com.disid.proof.ldap.web.LocalUsersItemThymeleafLinkFactory;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Locale;
import javax.validation.Valid;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect LocalUsersItemThymeleafController_Roo_Thymeleaf {
    
    declare @type: LocalUsersItemThymeleafController: @Controller;
    
    declare @type: LocalUsersItemThymeleafController: @RequestMapping(value = "/localusers/{localUser}", name = "LocalUsersItemThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource LocalUsersItemThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<LocalUsersItemThymeleafController> LocalUsersItemThymeleafController.itemLink;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param localUserService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public LocalUsersItemThymeleafController.new(LocalUserService localUserService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setLocalUserService(localUserService);
        setMessageSource(messageSource);
        setItemLink(linkBuilder.of(LocalUsersItemThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource LocalUsersItemThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void LocalUsersItemThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<LocalUsersItemThymeleafController> LocalUsersItemThymeleafController.getItemLink() {
        return itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param itemLink
     */
    public void LocalUsersItemThymeleafController.setItemLink(MethodLinkBuilderFactory<LocalUsersItemThymeleafController> itemLink) {
        this.itemLink = itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return LocalUser
     */
    @ModelAttribute
    public LocalUser LocalUsersItemThymeleafController.getLocalUser(@PathVariable("localUser") Long id, Locale locale, HttpMethod method) {
        LocalUser localUser = null;
        if (HttpMethod.PUT.equals(method)) {
            localUser = localUserService.findOneForUpdate(id);
        } else {
            localUser = localUserService.findOne(id);
        }
        
        if (localUser == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"LocalUser", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return localUser;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localUser
     * @param model
     * @return ModelAndView
     */
    @GetMapping(name = "show")
    public ModelAndView LocalUsersItemThymeleafController.show(@ModelAttribute LocalUser localUser, Model model) {
        model.addAttribute("localUser", localUser);
        return new ModelAndView("localusers/show");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localUser
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/inline", name = "showInline")
    public ModelAndView LocalUsersItemThymeleafController.showInline(@ModelAttribute LocalUser localUser, Model model) {
        model.addAttribute("localUser", localUser);
        return new ModelAndView("localusers/showInline :: inline-content");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dataBinder
     */
    @InitBinder("localUser")
    public void LocalUsersItemThymeleafController.initLocalUserBinder(WebDataBinder dataBinder) {
        dataBinder.setDisallowedFields("id");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void LocalUsersItemThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void LocalUsersItemThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localUser
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/edit-form", name = "editForm")
    public ModelAndView LocalUsersItemThymeleafController.editForm(@ModelAttribute LocalUser localUser, Model model) {
        populateForm(model);
        
        model.addAttribute("localUser", localUser);
        return new ModelAndView("localusers/edit");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localUser
     * @param version
     * @param concurrencyControl
     * @param result
     * @param model
     * @return ModelAndView
     */
    @PutMapping(name = "update")
    public ModelAndView LocalUsersItemThymeleafController.update(@Valid @ModelAttribute LocalUser localUser, @RequestParam("version") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, BindingResult result, Model model) {
        // Check if provided form contain errors
        if (result.hasErrors()) {
            populateForm(model);
            
            return new ModelAndView("localusers/edit");
        }
        // Concurrency control
        LocalUser existingLocalUser = getLocalUserService().findOne(localUser.getId());
        if(localUser.getVersion() != existingLocalUser.getVersion() && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            model.addAttribute("localUser", localUser);
            model.addAttribute("concurrency", true);
            return new ModelAndView("localusers/edit");
        } else if(localUser.getVersion() != existingLocalUser.getVersion() && "discard".equals(concurrencyControl)){
            populateForm(model);
            model.addAttribute("localUser", existingLocalUser);
            model.addAttribute("concurrency", false);
            return new ModelAndView("localusers/edit");
        } else if(localUser.getVersion() != existingLocalUser.getVersion() && "apply".equals(concurrencyControl)){
            // Update the version field to be able to override the existing values
            localUser.setVersion(existingLocalUser.getVersion());
        }
        LocalUser savedLocalUser = getLocalUserService().save(localUser);
        UriComponents showURI = getItemLink().to(LocalUsersItemThymeleafLinkFactory.SHOW).with("localUser", savedLocalUser.getId()).toUri();
        return new ModelAndView("redirect:" + showURI.toUriString());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localUser
     * @return ResponseEntity
     */
    @ResponseBody
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> LocalUsersItemThymeleafController.delete(@ModelAttribute LocalUser localUser) {
        getLocalUserService().delete(localUser);
        return ResponseEntity.ok().build();
    }
    
}
